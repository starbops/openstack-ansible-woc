---
# Configure prerequisites
- name: Create nova database
  mysql_db:
    name: nova
    state: present
- name: Grant proper access to the nova database from localhost
  mysql_user:
    name: nova
    password: "{{ nova_password }}"
    host: localhost
    priv: nova.*:ALL
    state: present
- name: Grant proper access to the nova database from any hosts
  mysql_user:
    name: nova
    password: "{{ nova_password }}"
    host: '%'
    priv: nova.*:ALL
    state: present
- name: List all OpenStack users
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
      user list
  register: user_list
- name: Create the nova user
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
      user create --password {{ nova_password }} nova
  when: user_list.stdout.find('nova') == -1
- name: Add the admin role to the nova user and service project
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
      role add --project service --user nova admin
  ignore_errors: yes
- name: List all OpenStack services
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
      service list
  register: service_list
- name: Create the nova service entity
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
      service create --name nova --description "OpenStack Compute service" compute
  when: service_list.stdout.find('nova') == -1
- name: List all OpenStack endpoints
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
      endpoint list
  register: endpoint_list
- name: Create the Compute service API endpoint
  command: >
    openstack \
      --os-auth-url http://controller:35357/v3 \
      --os-project-domain-id default --os-user-domain-id default \
      --os-project-name admin \
      --os-username admin --os-password {{ admin_password }} \
        endpoint create \
        --publicurl http://controller:9292 \
        --internalurl http://controller:9292 \
        --adminurl http://controller:9292 \
        --region RegionOne \
        compute
  when: endpoint_list.stdout.find('nova') == -1

# Install and configure compute controller components
- name: Install the packages
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nova-api
    - nova-cert
    - nova-conductor
    - nova-consoleauth
    - nova-novncproxy
    - nova-scheduler
    - python-novaclient
- name: Remove keystone_authtoken section in /etc/nova/nova.conf
  become: yes
  ini_file:
    dest: /etc/nova/nova.conf
    section: keystone_authtoken
    state: absent
- name: Prepare nova.conf
  become: yes
  ini_file:
    dest: /etc/nova/nova.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { section: database, option: connection, value: "mysql://nova:{{ nova_password }}@controller/nova" }
    - { section: DEFAULT, option: rpc_backend, value: rabbit }
    - { section: oslo_messaging_rabbit, option: rabbit_host, value: controller }
    - { section: oslo_messaging_rabbit, option: rabbit_userid, value: openstack }
    - { section: oslo_messaging_rabbit, option: rabbit_password, value: "{{ rabbit_openstack_password }}" }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: keystone_authtoken, option: auth_uri, value: 'http://controller:5000' }
    - { section: keystone_authtoken, option: auth_url, value: 'http://controller:35357' }
    - { section: keystone_authtoken, option: auth_plugin, value: password }
    - { section: keystone_authtoken, option: project_domain_id, value: default }
    - { section: keystone_authtoken, option: user_domain_id, value: default }
    - { section: keystone_authtoken, option: project_name, value: service }
    - { section: keystone_authtoken, option: username, value: nova }
    - { section: keystone_authtoken, option: password, value: "{{ nova_password }}" }
    - { section: DEFAULT, option: my_ip, value: "{{ ansible_all_ipv4_addresses[0] }}" }
    - { section: DEFAULT, option: vncserver_listen, value: "{{ ansible_all_ipv4_addresses[0] }}" }
    - { section: DEFAULT, option: vncserver_proxyclient_address, value: "{{ ansible_all_ipv4_addresses[0] }}" }
    - { section: glance, option: host, value: controller }
    - { section: oslo_concurrency, option: lock_path, value: /var/lib/nova/tmp }
    - { section: DEFAULT, option: verbose, value: 'True' }
- name: Populate the Compute service database
  become: yes
  become_user: nova
  command: nova-manage db sync
- name: Restart the Compute services
  become: yes
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - nova-api
    - nova-cert
    - nova-consoleauth
    - nova-scheduler
    - nova-conductor
    - nova-novncproxy
- name: Remove the SQLite database file
  become: yes
  file:
    path: /var/lib/nova/nova.sqlite
    state: absent

# Install and configure a compute node
- name: Install the packages
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nova-compute
    - sysfsutils
- name: Remove keystone_authtoken section in /etc/nova/nova.conf
  become: yes
  ini_file:
    dest: /etc/nova/nova.conf
    section: keystone_authtoken
    state: absent
- name: Prepare nova.conf
  become: yes
  ini_file:
    dest: /etc/nova/nova.conf
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { section: DEFAULT, option: rpc_backend, value: rabbit }
    - { section: oslo_messaging_rabbit, option: rabbit_host, value: controller }
    - { section: oslo_messaging_rabbit, option: rabbit_userid, value: openstack }
    - { section: oslo_messaging_rabbit, option: rabbit_host, value: "{{ rabbit_openstack_password }}" }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: keystone_authtoken, option: auth_uri, value: 'http://controller:5000' }
    - { section: keystone_authtoken, option: auth_url, value: 'http://controller:35357' }
    - { section: keystone_authtoken, option: auth_plugin, value: password }
    - { section: keystone_authtoken, option: project_domain_id, value: default }
    - { section: keystone_authtoken, option: user_domain_id, value: default }
    - { section: keystone_authtoken, option: project_name, value: service }
    - { section: keystone_authtoken, option: username, value: nova }
    - { section: keystone_authtoken, option: password, value: "{{ nova_password }}" }
    - { section: DEFAULT, option: my_ip, value: "{{ ansible_all_ipv4_addresses[0] }}" }
    - { section: DEFAULT, option: vnc_enabled, value: 'True' }
    - { section: DEFAULT, option: vncserver_listen, value: 0.0.0.0 }
    - { section: DEFAULT, option: vncserver_proxyclient_address, value: "{{ ansible_all_ipv4_addresses[0] }}" }
    - { section: DEFAULT, option: novncproxy_base_url, value: "http://{{ ansible_all_ipv4_addresses[0] }}:6080/vnc_auto.html" }
    - { section: glance, option: host, value: controller }
    - { section: oslo_concurrency, option: lock_path, value: /var/lib/nova/tmp }
    - { section: DEFAULT, option: verbose, value: 'True' }
- name: Restart the Compute service
  become: yes
  service:
    name: nova-compute
    state: restarted
- name: Remove the SQLite database file
  become: yes
  file:
    path: /var/lib/nova/nova.sqlite
    state: absent
